[{"D:\\Projects\\english-app\\src\\index.tsx":"1","D:\\Projects\\english-app\\src\\reportWebVitals.ts":"2","D:\\Projects\\English-app\\src\\index.tsx":"3","D:\\Projects\\English-app\\src\\reportWebVitals.ts":"4","D:\\Projects\\English-app\\src\\components\\App.tsx":"5","D:\\Projects\\English-app\\src\\components\\Pages\\Login.tsx":"6","D:\\Projects\\English-app\\src\\components\\Elements\\InputRenderer.tsx":"7","D:\\Projects\\English-app\\src\\components\\Elements\\ButtonRenderer.tsx":"8","D:\\Projects\\English-app\\src\\components\\Elements\\LinkRenderer.tsx":"9","D:\\Projects\\English-app\\src\\utils\\validation.ts":"10","D:\\Projects\\English-app\\src\\constants\\labels.ts":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":304,"mtime":1607534244992,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":394,"mtime":1610983315049,"results":"18","hashOfConfig":"16"},{"size":3487,"mtime":1619113984781,"results":"19","hashOfConfig":"16"},{"size":2839,"mtime":1611310575847,"results":"20","hashOfConfig":"16"},{"size":937,"mtime":1611138076949,"results":"21","hashOfConfig":"16"},{"size":813,"mtime":1611134827622,"results":"22","hashOfConfig":"16"},{"size":777,"mtime":1619113262964,"results":"23","hashOfConfig":"16"},{"size":31,"mtime":1619113995550,"results":"24","hashOfConfig":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f1f56g",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"x6d0ov",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\english-app\\src\\index.tsx",[],"D:\\Projects\\english-app\\src\\reportWebVitals.ts",[],"D:\\Projects\\English-app\\src\\index.tsx",[],["49","50"],"D:\\Projects\\English-app\\src\\reportWebVitals.ts",[],"D:\\Projects\\English-app\\src\\components\\App.tsx",[],"D:\\Projects\\English-app\\src\\components\\Pages\\Login.tsx",["51"],"D:\\Projects\\English-app\\src\\components\\Elements\\InputRenderer.tsx",["52","53","54","55"],"import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n   TextField, Radio, RadioGroup, InputLabel, IconButton,\r\n} from '@material-ui/core';\r\n\r\ninterface InputRendererProps {\r\n   id: string,\r\n   name: string,\r\n   type: string,\r\n   label: string,\r\n   value: string,\r\n   changeValueCallback(value: string): void,\r\n   // isValid: boolean,\r\n   errorText: string,\r\n   tip?: string\r\n   // setIsValid(): boolean\r\n}\r\n\r\nconst CustomInput = withStyles({\r\n   root: {\r\n      '& input': {\r\n         boxSizing: 'border-box',\r\n         height: '44px',\r\n         padding: '10px 14px',\r\n         color: '#fff',\r\n      },\r\n      '& fieldset': {\r\n         borderColor: '#fff',\r\n      },\r\n      '& .MuiFormHelperText-contained': {\r\n         marginLeft: 5,\r\n         marginRight: 5,\r\n         lineHeight: 1.24,\r\n         color: '#ffbbb6'\r\n      }\r\n   },\r\n})(TextField);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n   root: {\r\n      '& .MuiFormLabel-root': {\r\n         color: '#fff',\r\n      },\r\n      '&:hover $notchedOutline, &:focus $notchedOutline': {\r\n         borderColor: 'rgba(255, 255, 255, .7)'\r\n      },\r\n      '&.Mui-focused $notchedOutline': {\r\n         borderColor: 'rgba(255, 255, 255, .7)'\r\n      },\r\n      '& input': {\r\n         lineHeight: '1.24em'\r\n      },\r\n      '& label': {\r\n         transform: 'translate(14px, 14px) scale(1)'\r\n      }\r\n   },\r\n   notchedOutline: {}\r\n}));\r\n\r\nconst InputRenderer: React.FC<InputRendererProps> = (props) => {\r\n   const [value, setValue] = useState<string>('');\r\n   const classes = useStyles();\r\n   const tip = props.tip ? props.tip : ' ';\r\n\r\n   const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setValue(event.target.value);\r\n      props.changeValueCallback(event.target.value)\r\n   }\r\n\r\n   // const keyPressHandler = (event: React.KeyboardEvent) => {\r\n   //    if(event.key === 'Enter') {\r\n   //       setValue('')\r\n   //       console.log(value);\r\n   //    }\r\n   // }\r\n\r\n   return (\r\n      <>\r\n         <CustomInput \r\n            id={props.id}\r\n            classes={{\r\n               root: classes.root,\r\n            }}\r\n            InputProps={{\r\n               classes: {\r\n                  root: classes.root,\r\n                  notchedOutline: classes.notchedOutline\r\n               }\r\n            }}\r\n            name={props.name}\r\n            type={props.type}\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            value={value}\r\n            onChange={changeHandler}\r\n            // onKeyPress={keyPressHandler}\r\n            error={(props.errorText !== '' && props.errorText !== undefined)}\r\n            helperText={props.errorText ? props.errorText : tip}\r\n         />\r\n         {/* <span className=\"error-text\"></span> */}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default InputRenderer;\r\n","D:\\Projects\\English-app\\src\\components\\Elements\\ButtonRenderer.tsx",[],"D:\\Projects\\English-app\\src\\components\\Elements\\LinkRenderer.tsx",[],"D:\\Projects\\English-app\\src\\utils\\validation.ts",["56"],"D:\\Projects\\English-app\\src\\constants\\labels.ts",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":46,"column":13,"nodeType":"63","messageId":"64","endLine":46,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":4,"column":15,"nodeType":"63","messageId":"64","endLine":4,"endColumn":20},{"ruleId":"61","severity":1,"message":"66","line":4,"column":22,"nodeType":"63","messageId":"64","endLine":4,"endColumn":32},{"ruleId":"61","severity":1,"message":"67","line":4,"column":34,"nodeType":"63","messageId":"64","endLine":4,"endColumn":44},{"ruleId":"61","severity":1,"message":"68","line":4,"column":46,"nodeType":"63","messageId":"64","endLine":4,"endColumn":56},{"ruleId":"61","severity":1,"message":"69","line":1,"column":11,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'InputLabel' is defined but never used.","'IconButton' is defined but never used.","'validateParams' is defined but never used.","no-global-assign","no-unsafe-negation"]