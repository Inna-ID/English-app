[{"D:\\Projects\\english-app\\src\\index.tsx":"1","D:\\Projects\\english-app\\src\\reportWebVitals.ts":"2","D:\\Projects\\English-app\\src\\index.tsx":"3","D:\\Projects\\English-app\\src\\reportWebVitals.ts":"4","D:\\Projects\\English-app\\src\\components\\App.tsx":"5","D:\\Projects\\English-app\\src\\components\\Pages\\Login.tsx":"6","D:\\Projects\\English-app\\src\\components\\Elements\\InputRenderer.tsx":"7","D:\\Projects\\English-app\\src\\components\\Elements\\ButtonRenderer.tsx":"8","D:\\Projects\\English-app\\src\\components\\Elements\\LinkRenderer.tsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":304,"mtime":1607534244992,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":394,"mtime":1610983315049,"results":"16","hashOfConfig":"14"},{"size":2106,"mtime":1611072229769,"results":"17","hashOfConfig":"14"},{"size":2280,"mtime":1610733208240,"results":"18","hashOfConfig":"14"},{"size":933,"mtime":1610726775017,"results":"19","hashOfConfig":"14"},{"size":861,"mtime":1610986060720,"results":"20","hashOfConfig":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f1f56g",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"x6d0ov",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},"D:\\Projects\\english-app\\src\\index.tsx",[],"D:\\Projects\\english-app\\src\\reportWebVitals.ts",[],"D:\\Projects\\English-app\\src\\index.tsx",[],["42","43"],"D:\\Projects\\English-app\\src\\reportWebVitals.ts",[],"D:\\Projects\\English-app\\src\\components\\App.tsx",[],"D:\\Projects\\English-app\\src\\components\\Pages\\Login.tsx",["44","45"],"D:\\Projects\\English-app\\src\\components\\Elements\\InputRenderer.tsx",["46","47","48","49"],"import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n   TextField, Radio, RadioGroup, InputLabel, IconButton,\r\n} from '@material-ui/core';\r\n\r\ninterface InputRendererProps {\r\n   label: string,\r\n   value: string\r\n}\r\n\r\nconst CustomInput = withStyles({\r\n   root: {\r\n      '& input': {\r\n         boxSizing: 'border-box',\r\n         height: '44px',\r\n         padding: '10px 14px',\r\n         color: '#fff',\r\n      },\r\n      '& fieldset': {\r\n         borderColor: '#fff',\r\n         // '&:hover': {\r\n         //    borderColor: 'rgba(255, 255, 255, .7)'\r\n         // },\r\n      },\r\n      '&:hover $notchedOutline': {\r\n         borderColor: 'rgba(255, 255, 255, .7)'\r\n      },\r\n      '&:focus': {\r\n         \r\n      }\r\n   },\r\n})(TextField);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n   root: {\r\n      '& .MuiFormLabel-root': {\r\n         color: '#fff',\r\n      },\r\n      '&:hover $notchedOutline': {\r\n         borderColor: 'rgba(255, 255, 255, .7)'\r\n      },\r\n      '& input': {\r\n         lineHeight: '1.24em'\r\n      },\r\n      '& label': {\r\n         transform: 'translate(14px, 14px) scale(1)'\r\n      }\r\n   },\r\n   // focused: {},\r\n   notchedOutline: {}\r\n}));\r\n\r\nconst InputRenderer: React.FC<InputRendererProps> = (props) => {\r\n   const [value, setValue] = useState<string>('');\r\n   const classes = useStyles();\r\n\r\n   const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setValue(event.target.value);\r\n   }\r\n\r\n   const keyPressHandler = (event: React.KeyboardEvent) => {\r\n      if(event.key === 'Enter') {\r\n         setValue('')\r\n         console.log(value);\r\n      }\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <CustomInput \r\n            id=\"outlined-basic\"\r\n            classes={{\r\n               root: classes.root,\r\n            }}\r\n            InputProps={{\r\n               classes: {\r\n                  root: classes.root,\r\n                  notchedOutline: classes.notchedOutline\r\n               }\r\n            }}\r\n            // className={classes.root}\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            value={value}\r\n            onChange={changeHandler}\r\n            onKeyPress={keyPressHandler}\r\n         />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default InputRenderer;\r\n","D:\\Projects\\English-app\\src\\components\\Elements\\ButtonRenderer.tsx",[],"D:\\Projects\\English-app\\src\\components\\Elements\\LinkRenderer.tsx",["50"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as LinkRouterDom } from \"react-router-dom\";\r\n\r\ninterface LinkRendererProps {\r\n   text: string,\r\n   path: string,\r\n   classNameParam: string\r\n}\r\n\r\nconst useStyles = makeStyles ({\r\n   root: {\r\n      paddingBottom: '1px',\r\n      '&:hover, &:active': {\r\n        textDecoration: 'none',\r\n      },\r\n   },\r\n});\r\n\r\nconst LinkRenderer: React.FC<LinkRendererProps> = (props) => {\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Link \r\n         component={LinkRouterDom}\r\n         variant=\"body1\"\r\n         to={props.path}\r\n         className={`${classes.root} ${props.classNameParam}`}\r\n      >\r\n         {props.text}\r\n      </Link>\r\n   )\r\n}\r\n\r\nexport default LinkRenderer;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":34,"column":18,"nodeType":"57","messageId":"58","endLine":34,"endColumn":26},{"ruleId":"55","severity":1,"message":"59","line":35,"column":21,"nodeType":"57","messageId":"58","endLine":35,"endColumn":32},{"ruleId":"55","severity":1,"message":"60","line":4,"column":15,"nodeType":"57","messageId":"58","endLine":4,"endColumn":20},{"ruleId":"55","severity":1,"message":"61","line":4,"column":22,"nodeType":"57","messageId":"58","endLine":4,"endColumn":32},{"ruleId":"55","severity":1,"message":"62","line":4,"column":34,"nodeType":"57","messageId":"58","endLine":4,"endColumn":44},{"ruleId":"55","severity":1,"message":"63","line":4,"column":46,"nodeType":"57","messageId":"58","endLine":4,"endColumn":56},{"ruleId":"55","severity":1,"message":"64","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'setEmail' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'InputLabel' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]